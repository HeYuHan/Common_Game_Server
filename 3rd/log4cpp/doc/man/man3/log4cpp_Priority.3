.TH "log4cpp::Priority" 3 "1 Nov 2017" "Version 1.1" "log4cpp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4cpp::Priority \- 
.PP
The \fBPriority\fP class provides importance levels with which one can categorize log messages.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Priority.hh>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBPriorityLevel\fP { \fBEMERG\fP =  0, \fBFATAL\fP =  0, \fBALERT\fP =  100, \fBCRIT\fP =  200, \fBERROR\fP =  300, \fBWARN\fP =  400, \fBNOTICE\fP =  500, \fBINFO\fP =  600, \fBDEBUG\fP =  700, \fBNOTSET\fP =  800 }"
.br
.RI "\fIPredefined Levels of Priorities. \fP"
.ti -1c
.RI "typedef int \fBValue\fP"
.br
.RI "\fIThe type of \fBPriority\fP Values. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const std::string & \fBgetPriorityName\fP (int priority)  throw ()"
.br
.RI "\fIReturns the name of the given priority value. \fP"
.ti -1c
.RI "static \fBValue\fP \fBgetPriorityValue\fP (const std::string &priorityName)  throw (std::invalid_argument)"
.br
.RI "\fIReturns the value of the given priority name. \fP"
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const int \fBMESSAGE_SIZE\fP = 8"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBPriority\fP class provides importance levels with which one can categorize log messages. 
.SH "Member Typedef Documentation"
.PP 
.SS "typedef int \fBlog4cpp::Priority::Value\fP"
.PP
The type of \fBPriority\fP Values. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBlog4cpp::Priority::PriorityLevel\fP"
.PP
Predefined Levels of Priorities. These correspond to the priority levels used by syslog(3). 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIEMERG \fP\fP
.TP
\fB\fIFATAL \fP\fP
.TP
\fB\fIALERT \fP\fP
.TP
\fB\fICRIT \fP\fP
.TP
\fB\fIERROR \fP\fP
.TP
\fB\fIWARN \fP\fP
.TP
\fB\fINOTICE \fP\fP
.TP
\fB\fIINFO \fP\fP
.TP
\fB\fIDEBUG \fP\fP
.TP
\fB\fINOTSET \fP\fP

.SH "Member Function Documentation"
.PP 
.SS "const std::string & log4cpp::Priority::getPriorityName (int priority)  throw ()\fC [static]\fP"
.PP
Returns the name of the given priority value. Currently, if the value is not one of the PriorityLevel values, the method returns the name of the largest priority smaller the given value. 
.PP
\fBParameters:\fP
.RS 4
\fIpriority\fP the numeric value of the priority. 
.RE
.PP
\fBReturns:\fP
.RS 4
a string representing the name of the priority. 
.RE
.PP

.SS "\fBPriority::Value\fP log4cpp::Priority::getPriorityValue (const std::string & priorityName)  throw (std::invalid_argument)\fC [static]\fP"
.PP
Returns the value of the given priority name. This can be either one of EMERG ... NOTSET or a decimal string representation of the value, e.g. '700' for DEBUG. 
.PP
\fBParameters:\fP
.RS 4
\fIpriorityName\fP the string containing the the of the priority 
.RE
.PP
\fBReturns:\fP
.RS 4
the value corresponding with the priority name 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIstd::invalid_argument\fP if the priorityName does not correspond with a known \fBPriority\fP name or a number 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "const int \fBlog4cpp::Priority::MESSAGE_SIZE\fP = 8\fC [static]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for log4cpp from the source code.
