.TH "log4cpp::PropertyConfigurator" 3 "1 Nov 2017" "Version 1.1" "log4cpp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4cpp::PropertyConfigurator \- 
.PP
Property configurator will read a config file using the same (or similar) format to the config file used by log4j.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PropertyConfigurator.hh>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBconfigure\fP (const std::string &initFileName)  throw (ConfigureFailure)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Property configurator will read a config file using the same (or similar) format to the config file used by log4j. 

This file is in a standard Java 'properties' file format. 
.PP
Example:
.br
 
.PP
.nf

       # a simple test config
.fi
.PP
.PP
.PP
.nf
       log4j.rootCategory=DEBUG, rootAppender
       log4j.category.sub1=A1
       log4j.category.sub2=INFO
       log4j.category.sub1.sub2=ERROR, A2
.fi
.PP
.PP
.PP
.nf
       log4j.appender.rootAppender=org.apache.log4j.ConsoleAppender
       log4j.appender.rootAppender.layout=org.apache.log4j.BasicLayout
.fi
.PP
.PP
.PP
.nf
       log4j.appender.A1=org.apache.log4j.FileAppender
       log4j.appender.A1.fileName=A1.log
       log4j.appender.A1.layout=org.apache.log4j.BasicLayout
.fi
.PP
.PP
.PP
.nf
       log4j.appender.A2=org.apache.log4j.ConsoleAppender
       log4j.appender.A2.layout=org.apache.log4j.PatternLayout
       log4j.appender.A2.layout.ConversionPattern=The message %m at time %d%n
       
.fi
.PP
.PP
\fBSince:\fP
.RS 4
0.3.2 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void log4cpp::PropertyConfigurator::configure (const std::string & initFileName)  throw (\fBConfigureFailure\fP)\fC [static]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for log4cpp from the source code.
